services:
  bridge-server:
    restart: unless-stopped
    container_name: bridge-server
    depends_on:
      - vault
    build:
      context: ${BRIDGE_SERVER_PATH}
      dockerfile: Dockerfile
    links:
      - vault:${VAULT_gRPC_HOST:?err}
    volumes:
      - ${SSL_CERTIFICATES_PATH:?err}:${SSL_CERTIFICATES_PATH}
    environment:
      - GRPC_HOST=0.0.0.0
      - GRPC_PORT=${BRIDGE_SERVER_gRPC_PORT:?err}
      - GRPC_SSL_PORT=${BRIDGE_SERVER_gRPC_TLS_PORT:?err}

      - SSL_CERTIFICATE_FILE=${SSL_CERTIFICATE_FILE:?err}
      - SSL_CERTIFICATE_KEY_FILE=${SSL_CERTIFICATE_KEY_FILE:?err}

      - VAULT_GRPC_HOST=${VAULT_gRPC_HOST:?err}
      - VAULT_GRPC_PORT=${VAULT_gRPC_PORT:?err}
      - VAULT_GRPC_SSL_PORT=${VAULT_gRPC_TLS_PORT:?err}
      - VAULT_GRPC_INTERNAL_PORT=${VAULT_gRPC_INTERNAL_PORT:?err}
      - VAULT_GRPC_INTERNAL_SSL_PORT=${VAULT_gRPC_TLS_INTERNAL_PORT:?err}

      - SL_API_KEY=${SIMPLELOGIN_API_KEY:?err}
      - SL_PRIMARY_EMAIL=${SIMPLELOGIN_PRIMARY_EMAIL:?err}
      - SL_PRIMARY_DOMAIN=${SIMPLELOGIN_PRIMARY_DOMAIN:?err}

      - BRIDGE_SMTP_SERVER=${BRIDGE_SERVER_SMTP_SERVER:?err}
      - BRIDGE_SMTP_PORT=${BRIDGE_SERVER_SMTP_PORT:?err}
      - BRIDGE_SMTP_USERNAME=${BRIDGE_SERVER_SMTP_USERNAME:?err}
      - BRIDGE_SMTP_PASSWORD=${BRIDGE_SERVER_SMTP_PASSWORD:?err}
      - BRIDGE_IMAP_SERVER=${BRIDGE_SERVER_IMAP_SERVER:?err}
      - BRIDGE_IMAP_PORT=${BRIDGE_SERVER_IMAP_PORT:?err}
      - BRIDGE_IMAP_USERNAME=${BRIDGE_SERVER_IMAP_USERNAME:?err}
      - BRIDGE_IMAP_PASSWORD=${BRIDGE_SERVER_IMAP_PASSWORD:?err}
      - BRIDGE_IMAP_MAIL_FOLDER=${BRIDGE_SERVER_IMAP_MAIL_FOLDER:-INBOX}

      - MYSQL_HOST=database
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}

      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID:?err}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN:?err}
      - TWILIO_SERVICE_SID=${TWILIO_SERVICE_SID:?err}
      - TWILIO_PHONE_NUMBER=${TWILIO_PHONE_NUMBER:?err}
      - QUEUEDROID_API_URL=${QUEUEDROID_API_URL}
      - QUEUEDROID_API_KEY=${QUEUEDROID_API_KEY}
      - QUEUEDROID_EXCHANGE_ID=${QUEUEDROID_EXCHANGE_ID}
      - QUEUEDROID_SUPPORTED_REGION_CODES=${QUEUEDROID_SUPPORTED_REGION_CODES}
      - MOCK_REPLY_SMS=${MOCK_REPLY_SMS:?err}

      - LOG_LEVEL=${LOG_LEVEL}
      - SENTRY_DSN=${GLITCHTIP_RELAYSMS_DSN}

      - RECAPTCHA_SECRET_KEY=${RECAPTCHA_SECRET_KEY}
      - RECAPTCHA_ENABLED=${RECAPTCHA_ENABLED}
      - RECAPTCHA_MIN_SCORE=${RECAPTCHA_MIN_SCORE}
    networks:
      - assembler_network

  vault:
    restart: unless-stopped
    container_name: vault
    depends_on:
      database:
        condition: service_healthy
    build:
      context: ${VAULT_PATH}
      dockerfile: Dockerfile
      target: production
    volumes:
      - ${SSL_CERTIFICATES_PATH:?err}:${SSL_CERTIFICATES_PATH}
      - ${THIRD_PARTY_CREDENTIALS_PATH:?err}:/usr/local/share/smswithoutborders
      - ${SHARED_KEY:?err}:/usr/local/share/smswithoutborders/sharedkey.key
      - ${HASHING_SALT:?err}:/usr/local/share/smswithoutborders/hashingsalt.key
      - ${BROADCAST_WHITELIST:?err}:/usr/local/share/smswithoutborders/broadcast_list
      - telegram-data:/usr/local/share/smswithoutborders/telegram
      - keystore-data:/usr/local/share/smswithoutborders/keystore
      - static-keystore-data:/usr/local/share/smswithoutborders/static_x25519_keystore
    environment:
      - HOST=${VAULT_HTTP_HOST:?err}
      - PORT=${VAULT_HTTP_PORT:?err}
      - ORIGINS=["https://${HOMEPAGE_HTTP_HOST}"]

      - GRPC_HOST=0.0.0.0
      - GRPC_PORT=${VAULT_gRPC_PORT:?err}
      - GRPC_SSL_PORT=${VAULT_gRPC_TLS_PORT:?err}
      - GRPC_INTERNAL_PORT=${VAULT_gRPC_INTERNAL_PORT:?err}
      - GRPC_INTERNAL_SSL_PORT=${VAULT_gRPC_TLS_INTERNAL_PORT:?err}

      - SSL_SERVER_NAME=${VAULT_HTTP_HOST:?err}
      - SSL_PORT=${VAULT_HTTPS_PORT:?err}
      - SSL_CERTIFICATE=${SSL_CERTIFICATE_FILE:?err}
      - SSL_KEY=${SSL_CERTIFICATE_KEY_FILE:?err}
      - SSL_PEM=${SSL_CERTIFICATE_CHAIN_FILE:?err}

      - SHARED_KEY=/usr/local/share/smswithoutborders/sharedkey.key
      - HASHING_SALT=/usr/local/share/smswithoutborders/hashingsalt.key
      - BROADCAST_WHITELIST=/usr/local/share/smswithoutborders/broadcast_list

      - MYSQL_HOST=database
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}

      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID:?err}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN:?err}
      - TWILIO_SERVICE_SID=${TWILIO_SERVICE_SID:?err}
      - TWILIO_PHONE_NUMBER=${TWILIO_PHONE_NUMBER:?err}
      - QUEUEDROID_API_URL=${QUEUEDROID_API_URL}
      - QUEUEDROID_API_KEY=${QUEUEDROID_API_KEY}
      - QUEUEDROID_EXCHANGE_ID=${QUEUEDROID_EXCHANGE_ID}
      - QUEUEDROID_QUEUE_ID=${QUEUEDROID_QUEUE_ID}
      - QUEUEDROID_SUPPORTED_VERIFICATION_REGION_CODES=${QUEUEDROID_SUPPORTED_VERIFICATION_REGION_CODES}
      - MOCK_OTP=${MOCK_OTP}

      - RECAPTCHA_SECRET_KEY=${RECAPTCHA_SECRET_KEY}
      - ENABLE_RECAPTCHA=${ENABLE_RECAPTCHA:?err}

      - GMAIL_CREDENTIALS=/usr/local/share/smswithoutborders/gmail_credentials.json
      - TWITTER_CREDENTIALS=/usr/local/share/smswithoutborders/twitter_credentials.json
      - TELEGRAM_CREDENTIALS=/usr/local/share/smswithoutborders/telegram_credentials.json
      - TELEGRAM_RECORDS=/usr/local/share/smswithoutborders/telegram
      - KEYSTORE_PATH=/usr/local/share/smswithoutborders/keystore
      - STATIC_X25519_KEYSTORE_PATH=/usr/local/share/smswithoutborders/static_x25519_keystore

      - LOG_LEVEL=${LOG_LEVEL}
    networks:
      - assembler_network

  homepage:
    restart: unless-stopped
    container_name: homepage
    depends_on:
      - vault
    build:
      context: ${HOMEPAGE_PATH}
      dockerfile: Dockerfile
    volumes:
      - ${SSL_CERTIFICATE_FILE:?err}:/etc/nginx/ssl/cert.pem
      - ${SSL_CERTIFICATE_KEY_FILE:?err}:/etc/nginx/ssl/key.pem
      - ${SSL_CERTIFICATE_CHAIN_FILE:?err}:/etc/nginx/ssl/chain.pem
    environment:
      - SERVER_NAME=${HOMEPAGE_HTTP_HOST:?err}
    networks:
      - assembler_network

  gateway-server:
    restart: unless-stopped
    container_name: gateway-server
    depends_on:
      database:
        condition: service_healthy
      publisher:
        condition: service_started
    build:
      context: ${GATEWAY_SERVER_PATH}
      dockerfile: Dockerfile
      args:
        - HOST=${GATEWAY_SERVER_HTTP_HOST:?err}
        - PORT=${GATEWAY_SERVER_HTTP_PORT:?err}
        - SSL_PORT=${GATEWAY_SERVER_HTTPS_PORT:?err}
        - SSL_CERTIFICATE=${SSL_CERTIFICATE_FILE:?err}
        - SSL_KEY=${SSL_CERTIFICATE_KEY_FILE:?err}
        - SSL_PEM=${SSL_CERTIFICATE_CHAIN_FILE:?err}
    links:
      - publisher:${PUBLISHER_gRPC_HOST:?err}
      - bridge-server:${BRIDGE_SERVER_gRPC_HOST:?err}
    volumes:
      - ${SSL_CERTIFICATES_PATH:?err}:${SSL_CERTIFICATES_PATH}
      - ${THIRD_PARTY_CREDENTIALS_PATH:?err}:/usr/local/share/smswithoutborders
      - ${SHARED_KEY:?err}:/usr/local/share/smswithoutborders/sharedkey.key
      - ${HASHING_SALT:?err}:/usr/local/share/smswithoutborders/hashingsalt.key
      - telegram-data:/usr/local/share/smswithoutborders/telegram
      - ftp-data:/usr/local/share/smswithoutborders/ftp
    environment:
      - ORIGINS=["https://${HOMEPAGE_HTTP_HOST}"]

      - HOST=${GATEWAY_SERVER_HTTP_HOST:?err}
      - PORT=${GATEWAY_SERVER_HTTP_PORT:?err}

      - SSL_PORT=${GATEWAY_SERVER_HTTPS_PORT:?err}
      - SSL_CERTIFICATE=${SSL_CERTIFICATE_FILE:?err}
      - SSL_KEY=${SSL_CERTIFICATE_KEY_FILE:?err}
      - SSL_PEM=${SSL_CERTIFICATE_CHAIN_FILE:?err}

      - PUBLISHER_GRPC_HOST=${PUBLISHER_gRPC_HOST:?err}
      - PUBLISHER_GRPC_PORT=${PUBLISHER_gRPC_PORT:?err}
      - PUBLISHER_GRPC_SSL_PORT=${PUBLISHER_gRPC_TLS_PORT:?err}

      - BRIDGE_GRPC_HOST=${BRIDGE_SERVER_gRPC_HOST:?err}
      - BRIDGE_GRPC_PORT=${BRIDGE_SERVER_gRPC_PORT:?err}
      - BRIDGE_GRPC_SSL_PORT=${BRIDGE_SERVER_gRPC_TLS_PORT:?err}
      - DISABLE_BRIDGE_PAYLOADS_OVER_HTTP=${DISABLE_BRIDGE_PAYLOADS_OVER_HTTP}

      - MYSQL_HOST=database
      - MYSQL_USER=${MYSQL_USER:?err}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:?err}
      - MYSQL_DATABASE=${MYSQL_DATABASE:?err}
      - RSA_PR_KEY=${SSL_CERTIFICATE_KEY_FILE:?err}

      - MYSQL_BE_HOST=database
      - MYSQL_BE_PASSWORD=${MYSQL_PASSWORD:?err}
      - MYSQL_BE_DATABASE=${MYSQL_DATABASE:?err}

      - PUBLISHER_ENCRYPTION_KEY=${PUBLISHER_ENCRYPTION_KEY:?err}

      - IMAP_SERVER=${GATEWAY_SERVER_IMAP_SERVER:?err}
      - IMAP_PORT=${GATEWAY_SERVER_IMAP_PORT:-993}
      - IMAP_USERNAME=${GATEWAY_SERVER_IMAP_USERNAME:?err}
      - IMAP_PASSWORD=${GATEWAY_SERVER_IMAP_PASSWORD:?err}
      - MAIL_FOLDER=${GATEWAY_SERVER_MAIL_FOLDER:-INBOX}
      - SMTP_ALLOWED_EMAIL_ADDRESSES=${SMTP_ALLOWED_EMAIL_ADDRESSES:?err}

      - FTP_USERNAME=${GATEWAY_SERVER_FTP_USERNAME:?err}
      - FTP_PASSWORD=${GATEWAY_SERVER_FTP_PASSWORD:?err}
      - FTP_IP_ADDRESS=${GATEWAY_SERVER_FTP_IP_ADDRESS:?err}
      - FTP_PORT=${GATEWAY_SERVER_FTP_PORT:?err}
      - FTP_PASSIVE_PORTS=${GATEWAY_SERVER_FTP_PASSIVE_PORTS:?err}
      - FTP_MAX_CON=${GATEWAY_SERVER_FTP_MAX_CON:?err}
      - FTP_MAX_CON_PER_IP=${GATEWAY_SERVER_FTP_MAX_CON_PER_IP:?err}
      - FTP_DIRECTORY=/usr/local/share/smswithoutborders/ftp

      - DEKU_CLOUD_URL=${DEKU_CLOUD_URL:?err}
      - DEKU_CLOUD_PROJECT_REF=${DEKU_CLOUD_PROJECT_REF:?err}
      - DEKU_CLOUD_SERVICE_ID=${DEKU_CLOUD_SERVICE_ID:?err}
      - DEKU_CLOUD_ACCOUNT_SID=${DEKU_CLOUD_ACCOUNT_SID:?err}
      - DEKU_CLOUD_AUTH_TOKEN=${DEKU_CLOUD_AUTH_TOKEN:?err}

      - GMAIL_CREDENTIALS=/usr/local/share/smswithoutborders/gmail_credentials.json
      - TWITTER_CREDENTIALS=/usr/local/share/smswithoutborders/twitter_credentials.json
      - TELEGRAM_CREDENTIALS=/usr/local/share/smswithoutborders/telegram_credentials.json

      - TELEGRAM_RECORDS=/usr/local/share/smswithoutborders/telegram

      - SHARED_KEY=/usr/local/share/smswithoutborders/sharedkey.key
      - HASHING_SALT=/usr/local/share/smswithoutborders/hashingsalt.key

      - LOG_LEVEL=${LOG_LEVEL}
    networks:
      - assembler_network

  publisher:
    restart: unless-stopped
    container_name: publisher
    build:
      context: ${PUBLISHER_PATH}
      dockerfile: Dockerfile
    links:
      - vault:${VAULT_gRPC_HOST:?err}
    volumes:
      - ${SSL_CERTIFICATES_PATH:?err}:${SSL_CERTIFICATES_PATH}
      - ${THIRD_PARTY_CREDENTIALS_PATH:?err}:/usr/local/share/smswithoutborders
      - adapters:/usr/local/share/smswithoutborders/adapters
      - adapters-venv:/usr/local/share/smswithoutborders/adapters-venv
      - adapters-assets:/usr/local/share/smswithoutborders/adapters-assets
    environment:
      - GRPC_HOST=0.0.0.0
      - GRPC_PORT=${PUBLISHER_gRPC_PORT:?err}
      - GRPC_SSL_PORT=${PUBLISHER_gRPC_TLS_PORT:?err}

      - SSL_CERTIFICATE=${SSL_CERTIFICATE_FILE:?err}
      - SSL_KEY=${SSL_CERTIFICATE_KEY_FILE:?err}
      - SSL_PEM=${SSL_CERTIFICATE_CHAIN_FILE:?err}

      - MYSQL_HOST=database
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}

      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID:?err}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN:?err}
      - TWILIO_SERVICE_SID=${TWILIO_SERVICE_SID:?err}
      - TWILIO_PHONE_NUMBER=${TWILIO_PHONE_NUMBER:?err}
      - QUEUEDROID_API_URL=${QUEUEDROID_API_URL}
      - QUEUEDROID_API_KEY=${QUEUEDROID_API_KEY}
      - QUEUEDROID_EXCHANGE_ID=${QUEUEDROID_EXCHANGE_ID}
      - QUEUEDROID_SUPPORTED_REGION_CODES=${QUEUEDROID_SUPPORTED_REGION_CODES}
      - MOCK_DELIVERY_SMS=${MOCK_DELIVERY_SMS}

      - VAULT_GRPC_HOST=${VAULT_gRPC_HOST:?err}
      - VAULT_GRPC_PORT=${VAULT_gRPC_PORT:?err}
      - VAULT_GRPC_SSL_PORT=${VAULT_gRPC_TLS_PORT:?err}
      - VAULT_GRPC_INTERNAL_PORT=${VAULT_gRPC_INTERNAL_PORT:?err}
      - VAULT_GRPC_INTERNAL_SSL_PORT=${VAULT_gRPC_TLS_INTERNAL_PORT:?err}

      - PUBLISHER_DECRYPTION_KEY=${PUBLISHER_ENCRYPTION_KEY:?err}

      - PLATFORMS_ADAPTERS_DIR=/usr/local/share/smswithoutborders/adapters
      - PLATFORMS_ADAPTERS_VENV_DIR=/usr/local/share/smswithoutborders/adapters-venv
      - PLATFORMS_ADAPTERS_ASSETS_DIR=/usr/local/share/smswithoutborders/adapters-assets

      - SENTRY_DSN=${GLITCHTIP_RELAYSMS_DSN}
      - LOG_LEVEL=${LOG_LEVEL}
    networks:
      - assembler_network

  gateway-client-remote:
    restart: unless-stopped
    container_name: gateway-client-remote
    depends_on:
      - gateway-server
    links:
      - gateway-server:${GATEWAY_SERVER_HTTP_HOST:?err}
    build:
      context: ${GATEWAY_CLIENT_REMOTE_PATH}
      dockerfile: Dockerfile
    volumes:
      - ${SSL_CERTIFICATES_PATH:?err}:${SSL_CERTIFICATES_PATH}
    environment:
      - SERVER_NAME=${GATEWAY_CLIENT_REMOTE_HTTP_HOST:?err}
      - PORT=${GATEWAY_CLIENT_REMOTE_HTTP_PORT:?err}
      - HTTPS_PORT=${GATEWAY_CLIENT_REMOTE_HTTPS_PORT:?err}

      - SSL_CERTIFICATE_FILE=${SSL_CERTIFICATE_FILE:?err}
      - SSL_CERTIFICATE_KEY_FILE=${SSL_CERTIFICATE_KEY_FILE:?err}
      - SSL_CERTIFICATE_CHAIN_FILE=${SSL_CERTIFICATE_CHAIN_FILE:?err}

      - GATEWAY_SERVER_HOST=https://${GATEWAY_SERVER_HTTP_HOST}
      - GATEWAY_SERVER_PORT=${GATEWAY_SERVER_HTTPS_PORT:?err}

      - SMTP_HOST=${GATEWAY_CLIENT_REMOTE_SMTP_HOST}
      - SMTP_PORT=${GATEWAY_CLIENT_REMOTE_SMTP_PORT}
      - SMTP_USERNAME=${GATEWAY_CLIENT_REMOTE_SMTP_USERNAME}
      - SMTP_PASSWORD=${GATEWAY_CLIENT_REMOTE_SMTP_PASSWORD}
      - SMTP_FROM_ADDRESS=${GATEWAY_CLIENT_REMOTE_SMTP_FROM_ADDRESS}
      - SMTP_TO_ADDRESS=${GATEWAY_CLIENT_REMOTE_SMTP_TO_ADDRESS}
    networks:
      - assembler_network

  database:
    restart: unless-stopped
    container_name: database
    image: mariadb:11.4
    volumes:
      - db-data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MARIADB_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MARIADB_USER=${MYSQL_USER}
      - MARIADB_PASSWORD=${MYSQL_PASSWORD}
      - MARIADB_DATABASE=${MYSQL_DATABASE}
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - assembler_network

  telemetry-aggregator:
    restart: unless-stopped
    container_name: telemetry-aggregator
    depends_on:
      - vault
    links:
      - vault:${VAULT_HTTP_HOST:?err}
      - publisher:${PUBLISHER_HTTP_HOST:?err}
    build:
      context: ${TELEMETRY_AGGREGATOR_PATH}
      dockerfile: Dockerfile
    environment:
      - RELAYSMS_VAULT_DOMAIN=https://${VAULT_HTTP_HOST:?err}
      - RELAYSMS_VAULT_PORT=${VAULT_HTTPS_PORT:?err}
      - RELAYSMS_PUBLISHER_DOMAIN=http://${PUBLISHER_HTTP_HOST:?err}
      - RELAYSMS_PUBLISHER_PORT=${PUBLISHER_HTTP_PORT:?err}
      - LOG_LEVEL=${LOG_LEVEL}
    networks:
      - assembler_network

volumes:
  db-data:
  keystore-data:
  static-keystore-data:
  telegram-data:
  ftp-data:
  adapters:
  adapters-venv:
  adapters-assets:

networks:
  assembler_network:
    driver: bridge
